server:
  port: 8087

spring:
  application:
    name: chat-service

  webflux:
    base-path: /chat

  r2dbc:
    url: "r2dbc:mysql://localhost:3306/ins_chat"
    username: ${SQL_USERNAME}
    password: ${SQL_PASSWORD}
    pool:
      enabled: true

  data:
    redis:
      host: localhost
      port: 6379
      password: ${REDIS_PASSWORD}
      connect-timeout: 5000

  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: chat-service
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.deserializer.key.delegate.class: org.apache.kafka.common.serialization.StringDeserializer
        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
        spring.json.trusted.packages: "*"
        spring.json.add.type.headers: false

jwt:
  signerKey: ${JWT_SIGNER_KEY}
  valid-duration: 3600
  refreshable-duration: 36000